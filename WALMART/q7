/* https://practice.geeksforgeeks.org/problems/sorted-subsequence-of-size-3/1/ */
/* Sorted subsequence of size 3  */
vector<int> find3Numbers(vector<int> arr, int N) {
        // Your code here
              vector<int> res;
       
       if(arr.size() < 3)
           return res;
       
       int smaller[N];
       int min = 0;
       
       smaller[0] = -1;
       for(int i=1 ; i<N ; i++)
       {
           if(arr[i] <= arr[min])
           {
               smaller[i] = -1;
               min = i;
           }
           else
               smaller[i] = min;
       }
       
       //for(int i=0 ; i<N ; i++)
           //cout << smaller[i] << " ";
       //cout << endl;
       
       int greater[N];
       int max = N-1;
       
       greater[N-1] = -1;
       for(int i=N-2 ; i>=0 ; i--)
       {
           if(arr[i] >= arr[max])
           {
               greater[i] = -1;
               max = i;
           }
           else
               greater[i] = max;
       }
       
       //for(int i=0 ; i<N ; i++)
           //cout << greater[i] << " ";
       //cout << endl;
       
       for(int i=1 ; i<N-1 ; i++)
       {
           if(smaller[i]!=-1 && greater[i]!=-1)
           {
               res.push_back(arr[smaller[i]]);
               res.push_back(arr[i]);
               res.push_back(arr[greater[i]]);
               break;
           }
       }
       
       //for(int i=0 ; i<res.size() ; i++)
           //cout << res[i] << " ";
       //cout << endl;
       
       return res;
    }
