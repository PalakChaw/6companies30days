/* Number of Boomerangs */
/* https://leetcode.com/problems/number-of-boomerangs/ */

class Solution {
public:
    int distance(vector<int> &x,vector<int> &y)
{
    return (x[0]-y[0])*(x[0]-y[0])+(x[1]-y[1])*(x[1]-y[1]);
}
int numberOfBoomerangs(vector<vector<int>>& points) {
    
    int n=points.size();
    unordered_map<int,int> mp;
    
    int count=0;
    for(int i=0;i<n;i++)
    {
        
        for(int j=0;j<n;j++)
        {
            if(j==i)
                continue;
            int d=distance(points[i],points[j]);
            
            if(mp.find(d)!=mp.end())
                count+=mp[d]*2;
            
            mp[d]++;
        }
        mp.clear();
    }
    
    return count;
    
}
};
