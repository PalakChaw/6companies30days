/*  Split Array Largest Sum */
/* https://leetcode.com/problems/split-array-largest-sum/ */
 class Solution {
public:
    bool isvalid(vector<int>nums,int key,int n,int m)
    {
        int space=1;
        int sum=0;
        for(int i=0;i<nums.size();i++)
        {
            sum+=nums[i];
            if(sum>key)
            {
                space++;
                sum=nums[i];
            }
            if(space>m)
                return false;
        }
        if(space<=m)
            return true;
        return false;
    }
    int splitArray(vector<int>& nums, int m) {
        int n=nums.size();
        int maxi=0,sum=0;
        for(int i=0;i<nums.size();i++)
        {
            maxi=max(maxi,nums[i]);
            sum+=nums[i];
        }
        int low=maxi,high=sum; //answer will always be in the range [max,sum] of nums
        int result=-1;
        while(low<=high)
        {
            int mid=low+(high-low)/2;
            if(isvalid(nums,mid,n,m))
            {
                result=mid;
                high=mid-1;
            }
            else
                low=mid+1;
        }
        return result;
    }
};
